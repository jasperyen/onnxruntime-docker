# --------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------
# Dockerfile to run ONNXRuntime with CUDA, CUDNN integration
# Reference: https://github.com/microsoft/onnxruntime/blob/master/dockerfiles/Dockerfile.cuda

FROM nvidia/cuda:10.2-cudnn8-devel

# Prepare building environment
ENV DEBIAN_FRONTEND=noninteractive
ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
RUN apt-get update && apt-get install -y --no-install-recommends python3-dev ca-certificates g++ python3-numpy gcc make git python3-setuptools python3-wheel python3-pip aria2 && aria2c -q -d /tmp -o cmake-3.18.2-Linux-x86_64.tar.gz https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.tar.gz && tar -zxf /tmp/cmake-3.18.2-Linux-x86_64.tar.gz --strip=1 -C /usr


# Clone onnxruntime source from git
ARG ONNXRUNTIME_VERSION=v1.7.0
RUN git clone --recursive https://github.com/microsoft/onnxruntime.git /code && cd /code && git checkout tags/${ONNXRUNTIME_VERSION}

# Build onnxruntime
RUN cd /code && /bin/bash ./build.sh --skip_submodule_sync --cuda_home /usr/local/cuda --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_cuda --config Release --build_wheel --update --build --parallel --cmake_extra_defines ONNXRUNTIME_VERSION=$(cat ./VERSION_NUMBER) 'CMAKE_CUDA_ARCHITECTURES=30;37;50;52;60;70'

# Copy prebuild
FROM nvidia/cuda:10.2-cudnn8-runtime
COPY --from=0 /code/build /code/build

# Install python protocol
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends libstdc++6 ca-certificates python3-setuptools python3-wheel python3-pip unattended-upgrades && unattended-upgrade && python3 -m pip install /code/build/Linux/Release/dist/*.whl

RUN rm -rf /var/lib/apt/lists/*
